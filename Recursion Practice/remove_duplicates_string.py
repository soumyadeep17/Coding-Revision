from re import S

# removes one time means abbaca  --> aaca
def removeDuplicates(s):
    if len(s) == 1:
        return s[0]
    if s[0] == s[1]:
        return removeDuplicates(s[2:]) 
    if s[0]!=s[1]:
        return s[0] + removeDuplicates(s[1:])

# fully removes means abbaca --> abbaca --> aaca --> ca
def rem_dup(s):
    i = 0
    # if len(s) == 1:
    #     return s[0]
    # if len(s) == 2:
    #     if s[0] == s[1]:
    #         return ''
    #     else:
    #         return s
    while(i<len(s)-1):
        if s[i] == s[i+1]:
            s = s[:i] + s[i+2:]
            i = 0
            continue
        else:
            i+=1
    return s
x = 'cepjkspjcuilrnnfsmlpmrbtgjbgabuotaglkedjkurfamgeejkfnuihjptetlsqqfhcttrojbqpphaggiftmmechoheoppnhnufnrikotrfqjktcthcsnhhdqpfpooddjkproerdljudticrbefsfpouihkfnrfgoljoriclpjtgnikllpfabdsfsfkkftunaifqhkhclfomfntllijhebgibfotmhcbqdalsqmpgqmhouqqltqmahaidbdoreiltcaagcolfgguracilhkrlgfjfukbtrfqmngaooasrqtjncmoupbtepidpbogkenenoeglrfhpurondkphueuufeksnqkoggafgifserfpllmuiqmennltfpijdojekmfatmmfnhkroniublhgtqkqfurqlllarnmpqiteuplhijrcldomlpsechliedfrrahnpobuhktipheinorcehlounrnmdeahlltpfcafdkiajbukbbflebgsshullambefpekaocamsnandgaaadisfhkjnigolptdhjqqkmndmjetmtfuralmqbttpfuarcqnfoblchhedcgfujiucppdqmnbrsdbjjcsflilgessclnhrlnfoqfiqepuaqkfglludrnslueutaeilemgrmlicrbqqbdrecarrofaufshbueislkajectmhphfrssmlkicbphepuneleiqsjulcembumqhopdprbiikesbotbudfhnbfeutmtldjdidhkomfqqhdmmhncehoklrmoqdolfdphjkpjppmakqetausugmcumrmdjpsumdptdqfmgaijtcrskcajdfgqhrqaabjcumjjdeimsmnahqdhudgpuegkrsfmmimkhkqfqsgjoosfjeaisfdqnlcgisralblcnjhldahahsfqjhrnptdtatkfheuaffprsnpasptoskbhbceejmfrsgjcgjiurriokcgpiqtmjbgqaeprbciqoerpgrrrcucoccrhgehmanndghbkrksdhrrpcmokmjioojfolebrjssbhaesofsskitgcrjkbgptcetfbbltbtdbkanhetmotelmsfqrqbiqhfotgichkgubrrahgqhocfrndhcnhtaclfgueotmhgfqpgkndphlqdugqtttrsgsqnprqphdmjgdjuqminptooijnseitrtcqttunfnhnncseputfdfiefqnsbscqthdhirfnjbrnoiighhcikfidhesrmrrlttiderkeqlpcdkqqrdhobrjrilirapdfoehhgschndgogjpmugpdihmfibhqgblnldnghitiecqikooumgftmsdrbeftnjhnfuejqrksonprqtltlchgusfltfmgrobjesamctlbtfihmtirmbnmljiqbthsktehddjhpdunlqcdegebeugsujmbprbptlrrucgbhgkomorlsojdthfpicpudbimuhjlqqgcmthkuiqarutoldogpombfqfkdjatbbgfdjbaioehhirkdpfrklujlbcdiuhmoljugjqupdggqaceoapfmqdcejossuqtoonrdfeaoeouhuneelgffbgpbskpdccdtolijkuooocjskipmrbraijaoqgfthemgmdlpqophkbgcbptlbftoipolqearkaehcehgbguorcdaqanihrfjqdtikpgkccjfkcrfneckohbnopnrsefnkjdofrlafnrfmnuqhdduamacekienfljrpblrgqsqqijrfrunctqfspltnbanckgacjokaidejebkhbmeudfklchfgptbruiikfdrkusuucbhorjnkrcicghdgifqeitrflhqcsncqnifanhsuskhochdoeokdkifgkdodfrcrqohunfrctcoppkjmobducfolqssfmsccinrbgfalsbstodtdssqfuecfdonijisikhdtnjpmskjfghmbppnsrmkafphnenflptpmdpgehlafgnneknutshslrmdhtfkulqtafoormoflcjdetatncbattmdceqncqcqatqpiekcgumoprihejsrahorapfgqjeltudlpjlguqgqtqkhtstehjglcunqnkejssoasdqtsdpbbbeqcggdfapqofddkfrlreselqgicnpolpocrsfubjlnhibilmnrjpkbrudsrrmlldninlldeojomeiamqhlgspibrssffopfhdkkplpqqafoqodqpllogjeflfdahocrrtcjkpfnuuujuegcnnlddofjbjdluladthsbrshjtuhsuoieshauobssbuihsjutkpkqbhjgkpneluidjedrmqcmjroelsfolkglunnjbkfmouqarqljunptbjjagaprsorodutknpqdsmdehtcbkhqqolsucrqmspiacjpdkanbrmbnthaksseiosspsggsquetkgiakkhtjdstnojadgnhskbjleblkoflriscpmrquqpmsphpduqmoeeusggqhhbngunjjlkpusrikfgbbntiqclcptcdpufjceqmukeiplrccrhgdropmoscmnnrdnklhlmohfihcmjbsfleinmggliicapqakpntnrqcdqrrgntckphhgnarerlrjcbuioejjhscabsqeqqoahqacamljaopcaaqdlterjtcuhmtubgsngrrfbtthnsngdmmpjatnemijiocukodqbgujhbldeakffifbmsutidfmtuhsuinftfcauenrpfcncehtuetgsrsnednqfnbtgaqnitljcgdnpoheagmlrjlfaluuelujlocillskmhukekmeehbkscdatsgrlnoqhepoehibibdnunojhlqkfaocfdjocjebjtludadtsqmuompmlekjprnqrdnjokarfpalqqoudfstqqikhutmeuiuhshidlhmaohllijndakdqupuirrfgajqdhpurhemfqcamakenjhnskaisifaaaraslnpriautgjlgenbjtrmafilbpmpufcqtjqrtamkgutkflnejudbupkekgqqdksccnbnglrfgicicucbaitsfdqepfasqmmooritftrkqcopecagabthnhumodpskebaidmpahpujqirjkkejdsoiachmberhpcltqmugdiropcmnmqfkmmurepbdentifduaihmnsbbjqghkthponhrutpegbeqekknrqadlgehbfuqhpdqpmubtcbljcgsspdfbsohiifnmkbnueokmdifbiqclbffqctsqirurphkqsgaiingtkfnomiueifetosdorqgiiicrijpiemeabcbejdmeofghdbntnfaojbnltigtdfuhkidqanhbiqroatnekgphfhnonfqlpsqtdheooarddufkfrdgrauojafsdqbjlrmpitdugsnlcstefapafuuicmejnuthaqoumftjagjlsppborgikdgnehjernuofapeitsiposgktkjgenuhnncigctuebhsisjemglekdqlmpqkcguohptbtlngojigoabdnteftsfhegqlinbrkahbshascbopsonrllkbgnprceiccftctuajmhqkfonuelruheouggrkoghedsnraicqlsbglgcabctbhqhjgrmqabttorauajbhjjjlnjpajkibgiigssehsjlsiengldahpsjclpqmahfdjctplbljsopddpmamcdpnmoclrqealsekaapjneunhpqgkcohscbifkpapbhfngfkqfpjmcttpiplngqlrtlbqgtstelunldescslurrfpqospiajhtjnnmudnlelumjsooekfmbsagudofhqlamijtijqqgsfcccttenebqligisrrgbcggterkaisihbplmqscmgjfjrgcqbmaligobbfdhdnriqgpfqjcuqksasifjnnrhqihairqgsqplnufsaugaruuipqornpmdrqqmsbrrcpjonhmudtkrlbfdpdptkrnfstuhssrhkttaobjacpshrdkcrghcsfskfmmufictkktksfctisifujafrckmsbecludchqegsolkuojtqcsuougfpejasptnjnghoshhnpmcrnodmtsnrktahurkhiuaqibtemctftitansfgbhbuannrmmhppjimhquqeonaqdukdkosntljqojaofaukaangsrminablobjagkcjfmrdqdbgenqdmepjephehdqnbrpnganfkmhehahiuteqamcumjaqlfjjhhhoceinerigqaladocekhkeulpjunnirkpurutmamlepqptnolgfugkbjjrqtuecmdhnnaaokmhstrneumlppugjqeeklisomakcdcuddgtltlafpqptmskcfordmumqeoondofcbkagtttskcjrifmmddugcsgcsqftmcqmuesbilcqslojtjcetsrkifkhdoofjrrngqunipastmpahshctrluotstjqalhkqsgocijqregffssmufhleauhrkkechtribilggremocggquceikpskftldjucjqoiosnenluebsfkfsuofuefflknluchjkmbhdqenusffsmrclgotsmocgnqgacioagregqoprkpumgjmhhdltijnmroqojrfiofmoiadfjjdirrkabonqeckofqadelnhgbjoduhqnkjkqokdensmdjktbjltankonogolauioncjjgckdgnubtjfrlukcnkfkcftmplbtsrklullpmtdmjnbeepfnqihhplclnbpscljegpadmnepdkofdhkalebfolqtabuupgsmseijmgsnkbckmoqjmskngpgsrqhutpdjgrahrlkkmsicteaajgcfgtcncnfrlddhrketuamulpfttlfsddrodgucridsokfnjomtubicfpdjlqdeinlhkfgimkqdhgdaffcnguhthmqpmmgirthpmpjidgllchrkdkabfujdlcafujmrstochogjfmtnonbubdisppiarrmqghehipebsicqfoeptikftfgrnqlogobpuiskssolbhqrianjjfahnmmdnbfeqaoodmhnogiadbonbdllkcnfruicdkesrbbtufrlsrkemkofknqdlacclfgkiiigdpngpcledbkitqjeauageefrbmntkqqkaljihaqoddskmfidibbnflqqsacrjqlbcddpdcjkneghehsieakfgcproflfilijeiauleksdomhnniifahblpthigckfjeuqbpbslkliilqmfhapgpmecgbgdbsaqomtklsgtmsheulfimjqepbbgliekecatftqobbitibipraaoihgrtngnqilugaksgchrgeheucunhqrsjinirmarcktmnuecrcspkglbpdmicsmbsoqrqdqombjbdoktnusrjtirislrlqddrnkhqambdqajsojbjdecubuurauumptahkamcamipdsqgrkrrquajemmlnithukghtnukdjngbfiqtfadjgutafbaqbpcjdgoieakgqqunrhpbjbreuhlcranirieemialidqacdekuunriiscdrlcajihbnndagolikefjdmunoolruqotcilrckufdbfqfqrhlqtrigqqkjnfluffcougbrquosotekunubtdmmdcdgsorhrdphiprmrsgotbbglegjcqatlgbukqqkdpbpjqhsmuadbfnpiogjjheqhftkanhfalbjikqikauhljbenkiijnlmagidaqpekdcbjqndeocdpamkqicamekhjcdmoknhsqgemudqsprataktfcrtshupqdfakgjgbuhpbqcgqeujngrkjcbdumkhoukabqdhmnnlnarrueffpcjtidcsgetuaeauekbdncjlhslfnnjjtdmqurecakrkliqrruqteiuafjbhghprkjrriktsdubjbhlifiitpjdctupfaedbgrlbafkjmclfrlrbndstftakuptelcnmflbgifochqmjnpantedqimggegrtkeqfmlpfamlrskumbahngobbuhesdonsugijggidqfdhctgogbmpnmligcfllsgupthauffpfeestbmehdaakutiptaclminpmttutmnhkhgaqconbfrbunhcgchqsgctbgubromrgjaqagpochlrobutqenkmfctmgshnjffdipeigmdodpeknrrquhbtpooltcjscuttgpqksfbuebhraufmplaqeekopqrplsdakkfsssbjfgqmpqdteagmrhjqamjhifojiupkhompetocpoiqbaiggjbeniauhtobmbrmfgecmermfcqcgbjoolniobuastbptmfulnkmfppotuorrglgranhkskemhtnneilqhtmojfpfbmfqfgqkkecsdscotffhladdjofpcolngpmsjomrpktonnfspqosmqcbjrrlhpkmmdabkulldjijklsbdopeqtlofgiueonubnkehlcdonuljskrhtkjislldboinsogkdnpumenosdhqainmjoqghooogksbaakjutiuqpdcbsdkuctcfgigmgeiskpckrokgirajrhhqnlhhnilallknbqmmiooikpucpbouahsnfntiphtjokprspbjoojearabdadbpppfaqbomeneomtahqboadtioosaudnjgiijhmkkcuhlogoabgmbmdcusresabkdalpmictggjrpuafaamdjomgbdlllurathbjebhtmeuftlkndngrreociparimtfuodujutsqjhdotlcrgnsbboqqhpjgrnggoffufaccuednglpojtanptagndfttpumihojmsilgnuoqtghmqmpkdmubeuujdkokbslmbijttulfrqbrmgpjrqtftilnooeplrmokggdsdeebdkkisjuekidhougikblhttggthhhkjgbrtgiidgclkaepofmcqidmrnekolejkacankkqniokmcpoitlgpugnakebquccnkqtrhcnhikeskqahlocctctsaepiggoualokumerforppmhphanuutfabhhsqtcfekjsbrksaturonggdkdmoecqtjbefljhmhpnlhsclrosqgejhoiqmakqkufcqcjbdihqlsnkpshdofdtmjjqofqgrqbunaucocacecisuttjcggohfeibmbobukrcggdojaqkbbgoeompoiocknipmdkmuafpaqbhfcmrgalpmlcnafolekaohqpsrlfkolmtmtaoqoushqioepbqddguutsondtnrqkroothjrcgogucosjfohgftdpksblgblktpdsfjgessltpaisnfshcsichctphhphaqljodsnshlbccjacnrggnimhoknhufotpeprccktrabaaihqfkctttlgcrdtkidtntnqisgslggjpdsiphhlmkjmihpuhgdkgrmkfmsjnjtncaohjotqttcbpkpifdtjougbikqqogjenshmffpdqtormabelhkqmaskugrucmsdtfailjclqqugkudkbslermafttjmoouqitgimhppsgllbptffnehhnnqukimrdjgsfehlbjoleogmmjqmrlifathgqconbkaolosgnriuutqrmrdejlrsfbmntoolbgpnrtkbffblghjhrbifhtbtsggirlcbmjmlbdjgegefredhnamkshrjceqrqfakbbodpsqnbdpolbgcrrqarroepdiuhnfbgfnsqofkfiubgqdtkhhuhecjunleaknjnipkfibdflapjtgeetfsecgnolphrcrhagfmkagicgsljmmdspslecsslupuqukgmbmuomtnichiqkjurqkbdedmgmntebtcmtneshhiddslifehuhmscquouqksjqjhpgncmoathfbomaqbmcamuntjpobeqhcinkdbtqdghmnaggadqrriqlpbgtcksbckjmndiemqudfospsuqabdoaqsehcmdlqtdpcltcuaejbpqsqnbnrujnpduppdqhbissltqqkcuhuouamfiottrfsrosbonmqdhulrcboomutqstadhthkoihskgmiastmksjmfsuelophanntfunmmbjqsjakfaenptqcjiksifpotdlhlfmokrhrhaksobtigtmkepsundssfiqsefissltpoungdeqiahpkusmafatdodqtikcthquegnosisjnfdorrsaereudtlqbipnfacihfdptgooaufdcbhsaosaniftrhdirncepkqidrcdfmpomjhkamneehdjboktiqcjcelmokjrqjjsbeqgtlgpjcpjubofarqkirmfklahgaptfljlqqjjiihkijbalaftkhoajmhaeknepcnstqebnqjmhdmujqbogmdrujkkehkilqftjliigeljkdqgtntpcbcqahtcqjdehpjjmmlccsjsommkooijpctfpgilcqlrbaplrjoginokmljmlcehnljsterrkdopgkhjhqmneogmqodiittunrfhmjgbutrildodhfbnqdjkcloajpetbfoqlrsfkeidfnbhgrmhgtohclmisicsjehebjjccrneteaibhqjrenpcakocudcqicjjlukhfkhqeokfkpbbqcktjueckhmhipeegiagjcduqjaikttdahupmoeiomcakcffthkufmucobmpskcbebgbhstpjqgrmspfjkajoolgqerdsagdglmfukddtogfidkleufqmtadfnlbufugrpgbigtrkkgkbbsqjsrckrtjncpjinskllmpbsrqfjqernfjqhqoululgsmrgapktlttdumqijbfuabirfmdhrpsqfbsdrbdcingnamcaokcfqckpunepfrscuotbingtlfdmmmiadkgbhtllbnjffsffjdjhqqfdaiguaupkmsnluckjshlnjripfngudbrmapmdcujkdbsqhkdgaknlfraqfpckfrhjhetldktkkffbtjacmhqjjnkhmmijfpordildqqdnkerkdlamkneppobncpfockhmsklqhubpjdblesanpighhctgphiukbnpcojomfhlmshhgadgmgaliomqqtabeuioqnmsslljesirbgljdaubqnrotgtseactuecpmaaqpltaljreuhjnbauknqrhebgldgrjnrcrprdhdkdkgmsrqkaqcfrkkalctfimkruroqlcrnkhaqoeijjqgdkuurjifuleopcjobtbktmuimocsijfgkatluepbmftrmjpnnrahifhfgufdgcnhseikpiltnarqshlpocjkrmrbdmpgasdbspujibjqtlelmlucqmlqmggpjgdmocmemgorpotmqdhskfkisulssqhfderndjkhldgkirkgrjkketlasplircfjnimcofmfkdtfqnnrqbljmiqocrljqdnqfeqfqrfraoggcalatlngsjnrjjmifpmlitkumtidohgfltckofpeuhkdteadgbnksfpfnecnhdmbjnhgklqemluuejnaroedgcqggrjetfpniuqqnmkdgrqnjrmducnspjeespitngeiamnqpstskprdflrlqfdeltdocpplqadhsmqphmntesbigquepltohhpfcpacgerltffemqjnkntifaqniugeugbthcomssrbhprrcqbbnfbfiqsejbiiqlimtmicjafummpdeoitibuslsmndudrblnchfkljlrljmedontpgdrrohtnaulcejjsccsftujjiajoacagroclkcjfpfqijoeulpjhtcifjnbbjpuclbfokhjrsjkunosjtbrfpoaiqnftnrjqlsinfncfaabgbmktahletrtrkqkfbgfqoptnduppslpshlbpiqdnnnifaanufcrcucqhirrlbdttulhumpnapqeqihtustqloqhtddgodciemcjsknakbrepkbbjejcagcfnbmsrfhiajflrsnlhgjubirnjjbqhtotdndnpmehicpuinkepfdmaodpqcthebnlnpjblfqfuuollnrghethgimorldqkgkqabfgcusnjaamicikrlqieiaptrkfqbjqstsnkcsmphmoqrpghqhspjhgsutoektrbfjmgjheubuifmspmfsemtrssmqlomqrfrntdtfukjioousqrhkgjbkitoblfsfuabupgoijcmnkjktsibuemitjsqamjkmkpujothrulcmpjmiudruqemsqhfdrcoancargtushbtadnnukbdneqgcrnbrmrmgtmfcihhaqnrhtrncjrdmtoonukrgrqskusapbgriluuaethmnduomkpemreqnojbidssbtekhbqsqqnlgkdeqerpniknpbmfibmenhbuetuolljgepbrelskjjmgjqsmessarspppiskjbfbphsrsggplpidsaciecscouuibnbaudaueudeeedfrbejjfcqhitpnlbiartfedshkddlgdhqnahfbrnkcrculsadmsqhmspupljsjrmucftmunqseuudagrsggkdjflkkjhdodjoldhpnnrpfgurjohqpeafgugdljegungecsdilfujqfafmjcarauahiejrohhfoqncqnfqnocmfhcfhahbqchteajngnpttiqlkehuiadtfkolcjbocrmfogcqdsnugclbokrqeirghhnhnhjblatfsarcbgsfelhulpnumqjfjjhupaqmkhdrggslrmifhgirilaeftssadroptlfhlkpmuiqqojnjnqbbeolqhbuklmofgtfsoklskpmqnrlolhresbbklasdsunhkekjrbkfmktpgfrpemqntqnkndkkidncmbblcfraujcmjlohttklmugqjbssncoidqoaodeqotaltdiesmaungefdathrqujmpmetjmeseioatpmuemsrbnikosthgmdujtritldbhchsjkmjksdqujtrcriqdbinahdhnucljkikacrkcrlapuifdlrpsnuuihsogasptbjqgbcknpohddacrfbottanodoramdoigqcrmbpatnbqqsjpuijcljhbjfkoaimfoteunkfhlsdbjogpauphfrhnultksmqfgjdqhoerpktnaqlsbglpiaeomjhjilgetjgahinsttgcetatoemjonurigcaimcqsgarrgenulfqjrjausqdcfhdnaslsjrpaidubkpaotsuhnhkligmpqhkulgiicdttlgqjffohfhffppemrhcekmmhoqeompnsqbmuuknkbbdieiaarsmblgpeoqndhjqraslhfnpiqnmmbqtirshupgqtifhgjjusmpqqnjcpheecfhtdjnjtabaeunfiqdlmtabbpouognnecsgeplciujjmeluuiccnsmhppfjcbnnonbkfjidmhsnjcjhjsbqnoafcmaofqooqctkcdlttlarpumbdrqdohcjfjigjcrnlmhtjiqrmcmcljfduremaidkblubfniqquhjgnidihgbbsranjcmsbieeqqfgsbelhcmiogjpcrichcctebimhigoulknitcalcktdtobboqlekcfphkpdqtpkkdsfcblqatnjgnftfdccpnddfmacbjstsgooblmerrmerljgrbbplakjlkduathqeihqfmtajfcimkfpbfikcqmpbgrejkrkgunonoiguoosqecfuhcouqgjeafgtpgcfbbhepbsbgdoepftkchqobpohdaonkdenfmimefpqnnsoqpgbqcgppaagqtbsunbqmbpitmjggldajdrlussjnpohgmkgmlbicmsgrtfiteqtdbufeqccpbuilppfecapahbjahaclitesobggbtpienouluehcjjoudbqjgbrcostnnqgeuiegekiekjjibdpgasedrdsopicepmqtiimbkhapkipjbssheomrqeqtjnqbuaikqppqbakualjknogffebdiepolaqalegcjhckisjjrdnjkhclkkqikuhluqihekbfoecknsngmhaihqappskjdgtonrnmdtsnugfhtmjiigakjgcbsblopilnjqohsprfabghcbfkgonidqdicjhcumcimepssnutscaqdtjfmtojohscinfkmgtrfdqisqfgbtiqecqeesdpnoljqhqiupslgugrluaenhkdufskeqjpjflukfkullmatgieohgqbkbgjklicushreausotjlhuuosfjsqojrtnqkqaijaqiohgfqgjapqqpcmrdmcffqktsjehtusfmlaqrttalokkdqmmfkucasnkaaqrqribbuptdtgristkkfubkjbrjglhbmflamsnkkbfbkdbpqijnrfqrhjjkgglrntibsiarsbiqqifafcaclhnbdodkkkcrrrsfdajmmhafmmacnmribtdpicbnmetalkehsitrqqcsgoeerltrnslljbbrkpmcqefitalclijkcbjntnfdkmaqkftqrfsisijctspjultgtjkooadaurhousbaprkjjnnmnugdldjfrodeaqkgipogmarmjtoodmbdprlhhfkpksifsmluqlbilhkbjdnkrishckpsgioptushrameorrdbuciqqobccjbcpmkjbhlbfnlksgqgrughckhtjbocrtgpricnsdbkporesdpbfaaskjugsqedliefcncckfatfliieafdurjhtfgrndmoatsonjigtillknpbejhfqshiksfrajhdqopffgrqoleporhribiekpejhcbddnbicsmhpnmthhirmkhsstrlooodtanfskoktokuteonbtkqtthifbqaapumthnkojgqsepatbhoditpakjnuijqmstgetopdolmmnaefaeigbjoiplegfqcljrhdqrtuhrechoosundtgcndblahnlpelckodsctbfictjteffkgnbtqnbnscotoojceefquiosgusdmjpcfkhqmbaskotmtcdlftresunhqgflkrkfhqqthrkirclfmbnntgksbgmrmshfnnpugupbdhpoekbclqjusneiangirgsmesnldqnksatsjjtfpkgkbtriehpqrhsmsusjhqtjfbjqcskkqegpegmtpngeefokkqmesclsmkjiqfmobcsmsqlqonimjmstuocheriodpeulkohemcstpqgeopibpopffgbsmijghtupbpgpmjgsanmmunmmnrekhpaljhhqdulamttbsmeesdjpggdkcuthbaqrmreugsmshcrabhemrtaabhgriolnhhrjtmeetuhatrjdsjcmkdmjbdgkbekjmbthquqmltpblrgieobmhjdskthfhhkoebehsalsshhhttqkugtuqsdccnbesubfntadhcgqhpbrhabhojsqimkcplrphqloidfnsetcajpphumidfrrobjdunngrdeomnungscpnknugkhiaanqdeppfuetrieertnutnmcefdtfdggpgkcbpcefpptaoojidjakkblofjiujaaoujuaiiergrlguasthfgndrmodmustajllntjdugspkugnpmcfmiebblcpbldaffjradeskjcufeecjslceeadbckejblteodbufrdcqinmmpndianhbdggjcotrkaafesgeqnbmuakbfagogujtrflsglosoneokjfijkboeqhrcpifrpfsnutojoajgghmfoladuaponklqhjfdelptikabscdlrijhpuhbsocbdblolubtfsessjjucbujukomaskapmjrhmbpojhukqitmecnittebhbekshaikrbpmpqqfqqpildblblbfnmppgpbcmucojcnpijhrnlrmiloblnhcmlgccchjqttuffbbqehuecncitrcifrteubjobphsgrjdcankcaqgrdjbdjgfjnoqtousapfalusfubjrditctnsomdkprmcmcsdpneeustsgkeleqnaeqcsgcklrncdchqogpgtiuiedqfefskaddkaoqgmhmilekkafokkapsalobjsnpcegutkiqdtqeguifcioubsufjeautdmpekncdujpqkkjkpdanrqlpcpqleoqeguiqfogcbuepiohtnqkkghdrcaekaiapuarqoipspkecqrnljjuoohpulcqepfoeottcdntiqditrejlpihtmguahesjtrqcimtphrhbokaqjsdhfjdsoiirrtuohqaosdjqlkknqmtnlegcflhccpeeneffdrfharhdlhrfdhffkijltteaelkoeqobtigrthrgcejkgosjhmcqifieoumpppfclflhnhfpatrrpqkmsqnrnqamusbetgjqrjahkpqgubljqhrrqpcnfajaqncuantbmsncsgoqranomuhldbhmrnqmjirhhbrpsrubdpjokadgcksmuennbmtkbdustqsralaettdkgmpsoqgfbirmntmdcppkfqgffkjmclfdohfgssegjefqjunjhuriipuqrpjorcbphbcqnuitfsbglumcqracjbeanligkdgrddgkgnkknnhkpkoptgskkqnahfhhtmguetcalsjkidtcntgahlurhccsceqkeqhdaqqqnltqeomulhnnlpdmrorpmmgnslllstqbonbpldjmqluhcatgcskkpoaskldbsgbqunfdnmltmttrponcbglrlbgeqdphofhfamcssmitoorqcsbbakpcemofgionbuhmojispnojphescreorrstbddiqmitpntahmjtnesfprmojbnrnseprqoegmiqubjgibheeqqqnngpdticfliiipmqouhtbbqqtrihujbpkalhbekmbalmnkmuneutlpceiqlqqfbsoffnsuopuhjsiteapoubahjaheksdjhbmhbmtohokkbokehrpoedghmgibukdjcfspljkcjhbrckagafllnbdbiltufusjbejorlgseibmknbuocqkmhbcqitconfeblfoekfboptgcpmlmuembhkcjaufhuqlmjugdapsteigucdjgkecrgladiirejofbkfghotkhinebuhpnepkirmrqpconndjndmfcuqbknqbloqqlhojuokoslhrttiofnmtagejiepisrnscmdphbcdkauruenahlhpidablsntjeatqjklobgdcbikhuukeufkmbhpcfgktrhospobelndfkglbheboipquocpmchhkpqdkpsoafrrhsssquhjmikkjrljbrqghhcgnofpbaardfffaijclgtbtfgmmfuthrtbjdkjfdhojptphrtmqcociaspggmcjfcaqqtlquunjrhlgcttdnhiifamjpjlrmklpqgopptefibaklmipoqqftptpnfsdesgggdiippbtcilpqhfphobhnagbnjmnbtrjlemajrhqadmlmoigfshnjriekndohahjsdomtgssjrssmnkmgphcuencocctokrqshrdcqkfnettsuqatcsegqhheeglclcmakatqlrrrihsiojnmagqposltkgjkmltqafrafrsduoglperrimpgfnfagfidctndhbjltdjsmaaepsumcumbgrhlunicpaboclrqpiotudnhhdmkkspjlqfrrkcllnrqkngodqgplagokgtrmklrfenegsoskmecfgntbkunodqhbhoskogplpdegkfsbrlelrscmpuheefeaqlndmblcirqseucqidagbkgtdodekibtdabaglqsqiigishmgqlioepqmjdsjblpigsqfrdptstgediujlskllbmkleishkbgemsjrkfjmpmojiknqjdtprbeqnhjbltuaanhgphbcqmuabfjkkqibkrnlhtslckndqroagcgbpibgjgnfoklnbefcusbkdcogehdcpdqeanksdqqsqshqiaotndqrqnmihmtjqptffclqhangesfudsbcenrnnsdqadigqoushbelbghdmhfoehmpkamgukkcoirqqlmflkcnmdclpomopfkldgshckndklllpdfudtosqsgutnfaobgbecenkdalsgbhirkgpmiualkaljqleehjacdkltciisknabkjqqdmaumoeleiibtdjdbdufkrpkdeqkgmjsuupqcsccsnsmnngsuudgieqejnglpbsdcsjqpssuotithbuqgpensdthdscmbaqbqppommlchhccmseglblpocghijnlglpgbcpbpficbptekmnnruqijfenocrlefnmcpjbehfsmurefjnpdbhdfpurrsattgaeqgnpjsrtiombdkddofqfofbicufrikkshuslfcolhsskmhoggtqterileauudgubddmjpaeqkdkeddoofounricusrlngaacdgfjhlrqmndkntqjbsooarlfapgrthalreqbartnbqhifrrqmfjusjettpucmldrssarjnkihicarbhcdifbipopamkpcksoklphokotklbkhlffasdifhdbcemqpkcaosjurasbgjbjekfibdkgqnmbbsurkhbprscshiolgmrduouhnemmhiusbjdstbmhhijpjastuphdqbntoklacpjquubhcondtloekcbjlraasbhtjtojptkincgholatoeardjppbuqansrqbdqipmnmojhprnepprjsltrjlhdlktljmahtqkbpdactgbpdjdkgkqesflfpidpqaoeakkbugbaachoasftlicaehllbkushreamcebsjirsefeknoiraafqjqkrclournqnfkomnbtarbiqhlnettdsbmlkgqcsuhnsorkuhnnfaapnapjfublcbbrprpjnuehcpoduaphofcorqruelekobukukmlsgpunrifsutucicnuheumeabmtpdsoujiddglaqajlfcfjkjpusdkrilddmuafmqafnjsbgjjhoepsobmnrepnfbufiqogmhpmdotdliacmgkecbqfiskmabtrelraeiplkhquptpmgliaelfagekllhkeeeknkteqigqhojpuhqihllfsoukllsnjtgmcrqrcjkogannkihirusgtmmnremmnnqsuaegmnidacpgehaknrffqqalnhsaflktldbbamjgplcopnjhuqlsbngfnnrpgebkgrcamgfctnptuusabrsagjpqjerudecsjnlrimpefljalecsijqrcmqtfrcaacoffeigtgfomkllaatbunkudecfebtatgeobpbaplijhklbrmplnojngsqrhfqatjjhqtiiqrjecscqnrpesodqggmfsfculdskfucedeitjlmptsrgtttntttrbspfqjqfelmerufpuknekurieobismundnogiljeupjjfhksqtalhdeitggcitfkgodcmlsrkoupublcdjntjnhcnokpdbqfojdjshjkcnuiffcnipohbpsndfmsuainptulhdiddfqkrhteurimibqduimjfaosqtckennehbgioppmpsjigermsgcqkeakomoqjncgfidsshcceloepdfnqbjmnpnqupcjguhmgjbblejhcgbnbaasogrhfugkukaoibgcseglobalgecoudbuohrrjgdumsnuqdhjtttpghgjairgociaissegqerncfdnrnoamhqfeucajimrnkhgbeoiltibprlrdpsjjjbppepmsfaaprambkmihrrnipdonbicamdbjihiakgfcdltnqmiardacfsokkhhomgaptujrofcqefibtttqfjtibrcdojetohgflsrfecgahaqdulsbebhcrseddqcjqskqececilhbaqbruiictlumgufnnndpegujccdsifcoabsaebmrinaqaitccabknbsaiscjauannhurbfabirrijbhbnncjfspkibqasafqqasoojcjcjjqcgigihdmmdbkfkhcghnnetdnkposkaquflmuttehtrcbkpdhquggsudfdkilengeiofbfnofdackutefbpggkkpjdahcineiurjgfaiossnhohkgnppnlkanqgkphttldfhsqgpcsojkcfgmnightlbbnfqcsmjuobrkmemiefibmojpioktqgnqmmehqoocepfufgulfuhjqlrdrshiirggcqfgkekqukjiuqktdsqbkcsfrtoccalpldfpocebqngfsoiejhihgsfbjhaalbaqmrndggrsokeffcliqbfgoulkjqaacfinbdlttkagahdugnphrcuobisnfscrgpqjsauebrknjdhicreijstkmsljukplmodjabuqssqomekfidkefqtiegosmtdcdloicpkukmfgabkllkjjbagarneinladmqmbfiptqmpfrulmimfphpnccihhtlrqrdjmpoemalerhqooctrjeagsdaukqnseppqcgmiclfacsegdbdjtabsgcakabseklsscgqhhrdaaauookhihfbkbalpokpptfdrajmumitipkclcnahnfsstjasgechiqlkgfskuhsdannclhfppdodldqjbtlblocinipsphdqplmrbaheopjfqlkieniiscriffdoatebioesgdfhukqumsuhcmnqkiejejjencsukbcodogbfgdeqtesucpjmlfiireldnjtaathudqsgppjgbqcadskoefsrhfsimctsohetaktqtspfbdagbfmpaodepmpgcqglmucgthbbjprurntjbdjclbtgcdgsemlgcardbcnusdrnobkfdageothsofscanftspfamigckhdqkhmmfqstkcdhupbpgrsaioiobnugqucnkmkfsugbmltulgnprjsknoplalsofshourtlnfctcqoggtmnuogdgrdbailuajrmjfgahehhuqnbffendlcikhtbliforqjsqpcsplhmpbfpqfhhfblroqatunqmlhisipmngrtptniomcknbltbimdhuutidsrdukjbpbrstlcdshccjdkcardlgjfcsbfknfoghjqnichfprobjbljkjsspdbpltldjnllqolusjmecmmfapjhutkhjbdhsptajckmcififiuosdeaoapmjbilsmpghchhauaogjndlibspbferahednhofdlcghfffifarjgeeejftsnqjiihhfhslsbgqedcerejomtkpjqesjpufqmkdkroqhkpufcatesqajjfkobrjgjcumipuamobfjnoaafrgleqjdtmbjphafqlqbrnljmqgstcmdigdfrgjbteokcqhpbiakdrlhfocoqrufhtoojbfjpjpcnnsmlnjithglueflmofhkfasgufkkdbkncdiucotscrmcgrodhgkrhfmhqgttijtfkhifjiqmpdartotpojlqkedlaomopnrbhmnrkpkgefrdoqdurijnpdcskrgcbtcoidbtrdkdbspugnmrfddtgeqbkqfeqmufuoakolcdilailiehaokscultmhrhgjjacpnffoducmtqleafgafuqtoepftlonhmqefdlhujcehchiluecaspillpnmjtpjjnhkbdfqeadaalcbihrcdrfkkkrhbisqsjjurpgqrfjcjcplnfqecpgnojpilgqpmfmtfuibcemqkgufukibluucidmtadhmthfkufeatppbraiofeuphagtfhd'
print(rem_dup(x))